buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'gradle.plugin.com.onesignal:onesignal-gradle-plugin:0.12.3'
    }
}
apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'

repositories {
    maven { url 'https://maven.google.com' }
    mavenCentral()
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'


android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    defaultConfig {
        applicationId "br.com.icaro.filme"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 94
        versionName "9.9"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        config {
            allprojects {
                tasks.withType(JavaCompile) {
                    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
                }
            }
            defaultConfig {
                vectorDrawables.useSupportLibrary = true
                multiDexEnabled true
                manifestPlaceholders = [onesignal_app_id               : "52e564f3-2422-428e-abc9-307c1027be58",
                                        onesignal_google_project_number: "101446616560"]
            }

            signingConfigs {
                release {
                    storeFile file('../app/keystore.jks')
                    storePassword ""
                    keyAlias ""
                    keyPassword ""
                }
            }
            packagingOptions {

                exclude 'META-INF/DEPENDENCIES'
                exclude 'META-INF/NOTICE'
                exclude 'META-INF/LICENSE'
                exclude 'META-INF/LICENSE.txt'
                exclude 'META-INF/NOTICE.txt'
            }

            flavorDimensions "color"

            repositories {
                google()
                maven { url "https://jitpack.io" }
            }
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            lintOptions {
                checkReleaseBuilds false
                // Or, if you prefer, you can continue to check for errors in release builds,
                // but continue the build even when errors are found:
                abortOnError true
                disable "UnsafeExperimentalUsageError",
                        "UnsafeExperimentalUsageWarning"
            }
            storeFile file('/home/icaro/Documentos/workspace/PopCornShow/app/keystore.jks')
            storePassword ""
            keyAlias ""
            keyPassword ""
        }
    }

    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility "1.8"
        targetCompatibility "1.8"
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            ext.alwaysUpdateBuildId = false
            crunchPngs false
            ext.alwaysUpdateBuildId = false
            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
        }

        release {
            signingConfig signingConfigs.config
            ext.enableCrashlytics = true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources true
            zipAlignEnabled true
            //proguard com restrição ao log.ver
            debuggable false
            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
            signingConfig signingConfigs.config
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation files('libs/YouTubeAndroidPlayerApi.jar')
    //Google
    implementation "com.google.android.gms:play-services-analytics:$playService.analytics"
    implementation "com.google.android.gms:play-services-auth:$playService.auth"
    implementation "com.google.android.gms:play-services-ads:$playService.ads"
    //FireBase
    implementation "com.google.firebase:firebase-auth:$fire.auth"
    implementation "com.google.firebase:firebase-dynamic-links:$fire.dynamicLinks"
    implementation "com.google.firebase:firebase-perf:$fire.perf"
    implementation "com.google.firebase:firebase-database:$fire.database"
    implementation "com.google.firebase:firebase-crashlytics:$fire.crashlytics"
    implementation "com.google.firebase:firebase-analytics-ktx:$fire.analyticsKtx"
    //Android
    implementation "androidx.appcompat:appcompat:$droid.appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$droid.constraintlayout"
    implementation "androidx.recyclerview:recyclerview:$droid.recyclerview"
    implementation "com.google.android.material:material:$droid.material"
    implementation "androidx.legacy:legacy-support-v4:$droid.legacy"
    implementation "androidx.cardview:cardview:$droid.cardview"
    implementation "androidx.palette:palette-ktx:$droid.palette"
    implementation "org.slf4j:slf4j-android:$droid.slf4j"
    implementation "androidx.multidex:multidex:$droid.multidex"
    implementation "javax.annotation:javax.annotation-api:$droid.annotation"
    implementation "androidx.core:core-ktx:$droid.coreKtx"
    implementation "com.android.support:design:$droid.design"

    //Lib para suporte
    implementation "com.github.clans:fab:$other.fab"
    implementation "fr.avianey.com.viewpagerindicator:library:$other.library"
    implementation "me.relex:circleindicator:$other.circleIndicator"
    implementation "com.github.AppIntro:AppIntro:$other.appIntro"
    implementation "com.ramotion.foldingcell:folding-cell:$other.foldingCell"

    //Chamadas de Api
    implementation "com.squareup.okhttp3:okhttp:$call.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$call.loggingInterceptor"
    implementation "com.google.code.gson:gson:$call.gson"
    implementation "com.artemzin.rxjava:proguard-rules:$call.proguardRules"
    implementation "io.reactivex:rxjava:$call.rxjava"
    implementation "io.reactivex:rxandroid:$call.rxandroid"
    implementation "com.squareup.picasso:picasso:$call.picasso"

    //Terceiros
    implementation "com.onesignal:OneSignal:$support.OneSignal"
    implementation "com.facebook.android:facebook-android-sdk:$support.facebookAndroid"
    implementation "com.github.medyo:fancybuttons:$support.fancybuttons"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$support.kotlinxCoroutinesAndroid"
    implementation "androidx.fragment:fragment-ktx:$support.fragmentKtx"
    implementation "androidx.lifecycle:lifecycle-extensions:$support.lifecycleExtensions"
    implementation "android.arch.lifecycle:extensions:$support.archLifecycleExtensions"
    implementation "com.facebook.android:facebook-android-sdk:$support.facebookAndroidSdk"
    implementation "com.facebook.shimmer:shimmer:$support.shimmer"

    //Teste
    androidTestImplementation "androidx.test:runner:$test.runner"
    androidTestImplementation "androidx.test:rules:$test.rules"

    testImplementation "androidx.test.ext:truth:$test.truth"
    testImplementation "io.mockk:mockk:$test.mockK"
    testImplementation "junit:junit:$test.junit"
    testImplementation "androidx.arch.core:core-testing:$test.coreTesting"
    testImplementation "androidx.test:runner:$test.androidxTestRunner"
    testImplementation "androidx.test.espresso:espresso-core:$test.espressoCore"
    testImplementation "io.mockk:mockk-android:$test.mockK"
}

apply plugin: 'com.google.gms.google-services'

